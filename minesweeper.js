// Generated by psc-bundle 0.9.1
var PS = {};
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var Control_Category = PS["Control.Category"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  var apply = function (f) {
      return function (x) {
          return f(x);
      };
  };
  exports["apply"] = apply;
  exports["const"] = $$const;
  exports["flip"] = flip;
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
    "use strict";

  // module Data.Unit

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
    "use strict";

  // module Data.Show

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showNumberImpl = function (n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var $foreign = PS["Data.Show"];     
  var Show = function (show) {
      this.show = show;
  };                                                 
  var showNumber = new Show($foreign.showNumberImpl);
  var showInt = new Show($foreign.showIntImpl);
  var show = function (dict) {
      return dict.show;
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showInt"] = showInt;
  exports["showNumber"] = showNumber;
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var $foreign = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  exports["unit"] = $foreign.unit;
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var mapFlipped = function (dictFunctor) {
      return function (fa) {
          return function (f) {
              return map(dictFunctor)(f)(fa);
          };
      };
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["mapFlipped"] = mapFlipped;
  exports["void"] = $$void;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var $foreign = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];        
  var Apply = function (__superclass_Data$dotFunctor$dotFunctor_0, apply) {
      this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Applicative = function (__superclass_Control$dotApply$dotApply_0, pure) {
      this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
})(PS["Control.Applicative"] = PS["Control.Applicative"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var $foreign = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];        
  var Bind = function (__superclass_Control$dotApply$dotApply_0, bind) {
      this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
      this.bind = bind;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  var ifM = function (dictBind) {
      return function (cond) {
          return function (t) {
              return function (f) {
                  return bind(dictBind)(cond)(function (cond$prime) {
                      if (cond$prime) {
                          return t;
                      };
                      if (!cond$prime) {
                          return f;
                      };
                      throw new Error("Failed pattern match at Control.Bind line 103, column 35 - line 103, column 56: " + [ cond$prime.constructor.name ]);
                  });
              };
          };
      };
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["ifM"] = ifM;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];        
  var Monad = function (__superclass_Control$dotApplicative$dotApplicative_0, __superclass_Control$dotBind$dotBind_1) {
      this["__superclass_Control.Applicative.Applicative_0"] = __superclass_Control$dotApplicative$dotApplicative_0;
      this["__superclass_Control.Bind.Bind_1"] = __superclass_Control$dotBind$dotBind_1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(f)(function (v) {
                  return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
    "use strict";

  // module Control.Monad.Eff

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var monadEff = new Control_Monad.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Control_Bind.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Control_Apply.Apply(function () {
      return functorEff;
  }, Control_Monad.ap(monadEff));
  var applicativeEff = new Control_Applicative.Applicative(function () {
      return applyEff;
  }, $foreign.pureE);
  var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff.Random

  exports.random = Math.random;
})(PS["Control.Monad.Eff.Random"] = PS["Control.Monad.Eff.Random"] || {});
(function(exports) {
    "use strict";

  // module Data.Int

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS["Data.Boolean"] = PS["Data.Boolean"] || {});
(function(exports) {
    "use strict";

  // module Data.Bounded

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
    "use strict";

  // module Data.Eq

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var $foreign = PS["Data.Eq"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Eq = function (eq) {
      this.eq = eq;
  };                                    
  var eqInt = new Eq($foreign.refEq); 
  var eqBoolean = new Eq($foreign.refEq);
  var eq = function (dict) {
      return dict.eq;
  };
  var notEq = function (dictEq) {
      return function (x) {
          return function (y) {
              return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
          };
      };
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["notEq"] = notEq;
  exports["eqBoolean"] = eqBoolean;
  exports["eqInt"] = eqInt;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
    "use strict";

  // module Data.Ord.Unsafe

  exports.unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x > y ? gt : eq;
          };
        };
      };
    };
  };
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var $foreign = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Semigroup = function (append) {
      this.append = append;
  };                                                       
  var append = function (dict) {
      return dict.append;
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];        
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
})(PS["Data.Ordering"] = PS["Data.Ordering"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var $foreign = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];        
  var unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
  exports["unsafeCompare"] = unsafeCompare;
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var $foreign = PS["Data.Ord"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord_Unsafe = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Data_Semiring = PS["Data.Semiring"];        
  var Ord = function (__superclass_Data$dotEq$dotEq_0, compare) {
      this["__superclass_Data.Eq.Eq_0"] = __superclass_Data$dotEq$dotEq_0;
      this.compare = compare;
  };                                
  var ordInt = new Ord(function () {
      return Data_Eq.eqInt;
  }, Data_Ord_Unsafe.unsafeCompare);
  var compare = function (dict) {
      return dict.compare;
  };
  exports["Ord"] = Ord;
  exports["compare"] = compare;
  exports["ordInt"] = ordInt;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var $foreign = PS["Data.Bounded"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Ordering = PS["Data.Ordering"];        
  var Bounded = function (__superclass_Data$dotOrd$dotOrd_0, bottom, top) {
      this["__superclass_Data.Ord.Ord_0"] = __superclass_Data$dotOrd$dotOrd_0;
      this.bottom = bottom;
      this.top = top;
  };
  var top = function (dict) {
      return dict.top;
  };                                                 
  var boundedInt = new Bounded(function () {
      return Data_Ord.ordInt;
  }, $foreign.bottomInt, $foreign.topInt);
  var bottom = function (dict) {
      return dict.bottom;
  };
  exports["Bounded"] = Bounded;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["mempty"] = mempty;
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Category = PS["Control.Category"];        
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();                                                   
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromJust = function (dictPartial) {
      return function (v) {
          var __unused = function (dictPartial1) {
              return function ($dollar29) {
                  return $dollar29;
              };
          };
          return __unused(dictPartial)((function () {
              if (v instanceof Just) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Data.Maybe line 283, column 1 - line 283, column 21: " + [ v.constructor.name ]);
          })());
      };
  };
  exports["Just"] = Just;
  exports["Nothing"] = Nothing;
  exports["fromJust"] = fromJust;
  exports["functorMaybe"] = functorMaybe;
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
    "use strict";        

  exports.floor = Math.floor;  

  exports.pi = Math.PI;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var $foreign = PS["Math"];
  exports["floor"] = $foreign.floor;
  exports["pi"] = $foreign.pi;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
    "use strict";

  // module Partial.Unsafe

  exports.unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var $foreign = PS["Partial.Unsafe"];
  var Partial = PS["Partial"];
  exports["unsafePartial"] = $foreign.unsafePartial;
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var $foreign = PS["Data.Int"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var $$Math = PS["Math"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var unsafeClamp = function (x) {
      if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
          return Data_Bounded.top(Data_Bounded.boundedInt);
      };
      if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
          return Data_Bounded.bottom(Data_Bounded.boundedInt);
      };
      if (Data_Boolean.otherwise) {
          return Partial_Unsafe.unsafePartial(function (dictPartial) {
              return Data_Maybe.fromJust(dictPartial)(fromNumber(x));
          });
      };
      throw new Error("Failed pattern match at Data.Int line 64, column 1 - line 67, column 56: " + [ x.constructor.name ]);
  };
  var floor = function ($4) {
      return unsafeClamp($$Math.floor($4));
  };
  exports["floor"] = floor;
  exports["fromNumber"] = fromNumber;
  exports["toNumber"] = $foreign.toNumber;
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Random"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Int = PS["Data.Int"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Ord = PS["Data.Ord"];
  exports["random"] = $foreign.random;
})(PS["Control.Monad.Eff.Random"] = PS["Control.Monad.Eff.Random"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff.Ref

  exports.newRef = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.readRef = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports.writeRef = function (ref) {
    return function (val) {
      return function () {
        ref.value = val;
        return {};
      };
    };
  };
})(PS["Control.Monad.Eff.Ref"] = PS["Control.Monad.Eff.Ref"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Ref"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Unit = PS["Data.Unit"];
  exports["newRef"] = $foreign.newRef;
  exports["readRef"] = $foreign.readRef;
  exports["writeRef"] = $foreign.writeRef;
})(PS["Control.Monad.Eff.Ref"] = PS["Control.Monad.Eff.Ref"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Plus = PS["Control.Plus"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Category = PS["Control.Category"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];        
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  exports["Foldable"] = Foldable;
  exports["foldMap"] = foldMap;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
    "use strict";

  exports.runFn3 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return fn(a, b, c);
        };
      };
    };
  };
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var $foreign = PS["Data.Function.Uncurried"];
  var Data_Unit = PS["Data.Unit"];
  exports["runFn3"] = $foreign.runFn3;
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var $foreign = PS["Data.Traversable"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Data$dotFunctor$dotFunctor_0, sequence, traverse) {
      this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
      this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  }; 
  var sequence = function (dict) {
      return dict.sequence;
  }; 
  var $$for = function (dictApplicative) {
      return function (dictTraversable) {
          return function (x) {
              return function (f) {
                  return traverse(dictTraversable)(dictApplicative)(f)(x);
              };
          };
      };
  };
  exports["Traversable"] = Traversable;
  exports["for"] = $$for;
  exports["sequence"] = sequence;
  exports["traverse"] = traverse;
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Unit = PS["Data.Unit"];        
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var snd = function (v) {
      return v.value1;
  };                                                                                                    
  var fst = function (v) {
      return v.value0;
  };
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Control_Category = PS["Control.Category"];        
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var singleton = function (a) {
      return new Cons(a, Nil.value);
  };
  var semigroupList = new Data_Semigroup.Semigroup(function (v) {
      return function (ys) {
          if (v instanceof Nil) {
              return ys;
          };
          if (v instanceof Cons) {
              return new Cons(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(ys));
          };
          throw new Error("Failed pattern match at Data.List line 719, column 3 - line 719, column 21: " + [ v.constructor.name, ys.constructor.name ]);
      };
  });
  var reverse = (function () {
      var go = function (__copy_acc) {
          return function (__copy_v) {
              var acc = __copy_acc;
              var v = __copy_v;
              tco: while (true) {
                  if (v instanceof Nil) {
                      return acc;
                  };
                  if (v instanceof Cons) {
                      var __tco_acc = new Cons(v.value0, acc);
                      var __tco_v = v.value1;
                      acc = __tco_acc;
                      v = __tco_v;
                      continue tco;
                  };
                  throw new Error("Failed pattern match at Data.List line 346, column 1 - line 349, column 42: " + [ acc.constructor.name, v.constructor.name ]);
              };
          };
      };
      return go(Nil.value);
  })();                                      
  var range = function (start) {
      return function (end) {
          if (start === end) {
              return singleton(start);
          };
          if (Data_Boolean.otherwise) {
              var go = function (__copy_s) {
                  return function (__copy_e) {
                      return function (__copy_step) {
                          return function (__copy_rest) {
                              var s = __copy_s;
                              var e = __copy_e;
                              var step = __copy_step;
                              var rest = __copy_rest;
                              tco: while (true) {
                                  if (s === e) {
                                      return new Cons(s, rest);
                                  };
                                  if (Data_Boolean.otherwise) {
                                      var __tco_s = s + step | 0;
                                      var __tco_e = e;
                                      var __tco_step = step;
                                      var __tco_rest = new Cons(s, rest);
                                      s = __tco_s;
                                      e = __tco_e;
                                      step = __tco_step;
                                      rest = __tco_rest;
                                      continue tco;
                                  };
                                  throw new Error("Failed pattern match at Data.List line 138, column 1 - line 142, column 68: " + [ s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name ]);
                              };
                          };
                      };
                  };
              };
              return go(end)(start)((function () {
                  var $209 = start > end;
                  if ($209) {
                      return 1;
                  };
                  if (!$209) {
                      return -1;
                  };
                  throw new Error("Failed pattern match at Data.List line 139, column 45 - line 139, column 74: " + [ $209.constructor.name ]);
              })())(Nil.value);
          };
          throw new Error("Failed pattern match at Data.List line 138, column 1 - line 142, column 68: " + [ start.constructor.name, end.constructor.name ]);
      };
  };
  var index = function (__copy_v) {
      return function (__copy_v1) {
          var v = __copy_v;
          var v1 = __copy_v1;
          tco: while (true) {
              if (v instanceof Nil) {
                  return Data_Maybe.Nothing.value;
              };
              if (v instanceof Cons && v1 === 0) {
                  return new Data_Maybe.Just(v.value0);
              };
              if (v instanceof Cons) {
                  var __tco_v = v.value1;
                  var __tco_v1 = v1 - 1;
                  v = __tco_v;
                  v1 = __tco_v1;
                  continue tco;
              };
              throw new Error("Failed pattern match at Data.List line 262, column 1 - line 262, column 22: " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var functorList = new Data_Functor.Functor(function (f) {
      return function (lst) {
          var go = function (v) {
              return function (acc) {
                  if (v instanceof Nil) {
                      return acc;
                  };
                  if (v instanceof Cons) {
                      return Data_Function.apply(go(v.value1))(new Cons(f(v.value0), acc));
                  };
                  throw new Error("Failed pattern match at Data.List line 726, column 3 - line 729, column 48: " + [ v.constructor.name, acc.constructor.name ]);
              };
          };
          return Data_Function.apply(reverse)(go(lst)(Nil.value));
      };
  });
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              return function ($387) {
                  return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(acc)(f($387));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, (function () {
      var go = function (__copy_v) {
          return function (__copy_b) {
              return function (__copy_v1) {
                  var v = __copy_v;
                  var b = __copy_b;
                  var v1 = __copy_v1;
                  tco: while (true) {
                      if (v1 instanceof Nil) {
                          return b;
                      };
                      if (v1 instanceof Cons) {
                          var __tco_v = v;
                          var __tco_b = v(b)(v1.value0);
                          var __tco_v1 = v1.value1;
                          v = __tco_v;
                          b = __tco_b;
                          v1 = __tco_v1;
                          continue tco;
                      };
                      throw new Error("Failed pattern match at Data.List line 734, column 3 - line 737, column 49: " + [ v.constructor.name, b.constructor.name, v1.constructor.name ]);
                  };
              };
          };
      };
      return go;
  })(), function (v) {
      return function (b) {
          return function (v1) {
              if (v1 instanceof Nil) {
                  return b;
              };
              if (v1 instanceof Cons) {
                  return v(v1.value0)(Data_Foldable.foldr(foldableList)(v)(b)(v1.value1));
              };
              throw new Error("Failed pattern match at Data.List line 732, column 3 - line 732, column 20: " + [ v.constructor.name, b.constructor.name, v1.constructor.name ]);
          };
      };
  });   
  var traversableList = new Data_Traversable.Traversable(function () {
      return foldableList;
  }, function () {
      return functorList;
  }, function (dictApplicative) {
      return function (v) {
          if (v instanceof Nil) {
              return Control_Applicative.pure(dictApplicative)(Nil.value);
          };
          if (v instanceof Cons) {
              return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Cons.create)(v.value0))(Data_Traversable.sequence(traversableList)(dictApplicative)(v.value1));
          };
          throw new Error("Failed pattern match at Data.List line 750, column 3 - line 750, column 26: " + [ v.constructor.name ]);
      };
  }, function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v1 instanceof Nil) {
                  return Control_Applicative.pure(dictApplicative)(Nil.value);
              };
              if (v1 instanceof Cons) {
                  return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Cons.create)(v(v1.value0)))(Data_Traversable.traverse(traversableList)(dictApplicative)(v)(v1.value1));
              };
              throw new Error("Failed pattern match at Data.List line 748, column 3 - line 748, column 28: " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  });
  var filter = function (p) {
      var go = function (__copy_acc) {
          return function (__copy_v) {
              var acc = __copy_acc;
              var v = __copy_v;
              tco: while (true) {
                  if (v instanceof Nil) {
                      return reverse(acc);
                  };
                  if (v instanceof Cons) {
                      if (p(v.value0)) {
                          var __tco_acc = new Cons(v.value0, acc);
                          var __tco_v = v.value1;
                          acc = __tco_acc;
                          v = __tco_v;
                          continue tco;
                      };
                      if (Data_Boolean.otherwise) {
                          var __tco_acc = acc;
                          var __tco_v = v.value1;
                          acc = __tco_acc;
                          v = __tco_v;
                          continue tco;
                      };
                  };
                  throw new Error("Failed pattern match at Data.List line 369, column 1 - line 374, column 28: " + [ acc.constructor.name, v.constructor.name ]);
              };
          };
      };
      return go(Nil.value);
  };
  var nubBy = function (v) {
      return function (v1) {
          if (v1 instanceof Nil) {
              return Nil.value;
          };
          if (v1 instanceof Cons) {
              return new Cons(v1.value0, nubBy(v)(filter(function (y) {
                  return !v(v1.value0)(y);
              })(v1.value1)));
          };
          throw new Error("Failed pattern match at Data.List line 567, column 1 - line 567, column 22: " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var deleteBy = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nil) {
                  return Nil.value;
              };
              if (v2 instanceof Cons && v(v1)(v2.value0)) {
                  return v2.value1;
              };
              if (v2 instanceof Cons) {
                  return new Cons(v2.value0, deleteBy(v)(v1)(v2.value1));
              };
              throw new Error("Failed pattern match at Data.List line 594, column 1 - line 594, column 23: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var unionBy = function (eq) {
      return function (xs) {
          return function (ys) {
              return Data_Semigroup.append(semigroupList)(xs)(Data_Foldable.foldl(foldableList)(Data_Function.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
          };
      };
  };
  var union = function (dictEq) {
      return unionBy(Data_Eq.eq(dictEq));
  };
  var $$delete = function (dictEq) {
      return deleteBy(Data_Eq.eq(dictEq));
  };
  var difference = function (dictEq) {
      return Data_Foldable.foldl(foldableList)(Data_Function.flip($$delete(dictEq)));
  };                                                                         
  var applyList = new Control_Apply.Apply(function () {
      return functorList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.List line 754, column 3 - line 754, column 20: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var alterAt = function (v) {
      return function (v1) {
          return function (v2) {
              if (v === 0 && v2 instanceof Cons) {
                  return Data_Function.apply(Data_Maybe.Just.create)((function () {
                      var $379 = v1(v2.value0);
                      if ($379 instanceof Data_Maybe.Nothing) {
                          return v2.value1;
                      };
                      if ($379 instanceof Data_Maybe.Just) {
                          return new Cons($379.value0, v2.value1);
                      };
                      throw new Error("Failed pattern match at Data.List line 331, column 27 - line 334, column 26: " + [ $379.constructor.name ]);
                  })());
              };
              if (v2 instanceof Cons) {
                  return Data_Functor.map(Data_Maybe.functorMaybe)(Cons.create(v2.value0))(alterAt(v - 1)(v1)(v2.value1));
              };
              return Data_Maybe.Nothing.value;
          };
      };
  };
  var modifyAt = function (n) {
      return function (f) {
          return alterAt(n)(function ($388) {
              return Data_Maybe.Just.create(f($388));
          });
      };
  };
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["alterAt"] = alterAt;
  exports["deleteBy"] = deleteBy;
  exports["difference"] = difference;
  exports["filter"] = filter;
  exports["index"] = index;
  exports["modifyAt"] = modifyAt;
  exports["nubBy"] = nubBy;
  exports["range"] = range;
  exports["reverse"] = reverse;
  exports["singleton"] = singleton;
  exports["union"] = union;
  exports["unionBy"] = unionBy;
  exports["semigroupList"] = semigroupList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["traversableList"] = traversableList;
  exports["applyList"] = applyList;
})(PS["Data.List"] = PS["Data.List"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.getCanvasElementByIdImpl = function(id, Just, Nothing) {
      return function() {
          var el = document.getElementById(id);
          if (el && el instanceof HTMLCanvasElement) {
              return Just(el);
          } else {
              return Nothing;
          }
      };
  };

  exports.getContext2D = function(c) {
      return function() {
          return c.getContext('2d');
      };
  };

  exports.setCanvasWidth = function(width) {
      return function(canvas) {
          return function() {
              canvas.width = width;
              return canvas;
          };
      };
  };

  exports.setCanvasHeight = function(height) {
      return function(canvas) {
          return function() {
              canvas.height = height;
              return canvas;
          };
      };
  };

  exports.setFillStyle = function(style) {
      return function(ctx) {
          return function() {
              ctx.fillStyle = style;
              return ctx;
          };
      };
  };

  exports.beginPath = function(ctx) {
      return function() {
          ctx.beginPath();
          return ctx;
      };
  };

  exports.fill = function(ctx) {
      return function() {
          ctx.fill();
          return ctx;
      };
  };

  exports.closePath = function(ctx) {
      return function() {
          ctx.closePath();
          return ctx;
      };
  };

  exports.arc = function(ctx) {
      return function(a) {
          return function() {
              ctx.arc(a.x, a.y, a.r, a.start, a.end);
              return ctx;
          };
      };
  };

  exports.fillRect = function(ctx) {
      return function(r) {
          return function() {
              ctx.fillRect(r.x, r.y, r.w, r.h);
              return ctx;
          };
      };
  };

  exports.font = function(ctx) {
      return function() {
          return ctx.font;
      };
  };

  exports.setFont = function(fontspec) {
      return function(ctx) {
          return function() {
              ctx.font = fontspec;
              return ctx;
          };
      };
  };

  exports.fillText = function(ctx) {
      return function(text) {
          return function(x) {
              return function(y) {
                  return function() {
                      ctx.fillText(text, x, y);
                      return ctx;
                  };
              };
          };
      };
  };
})(PS["Graphics.Canvas"] = PS["Graphics.Canvas"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var $foreign = PS["Graphics.Canvas"];
  var Prelude = PS["Prelude"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception_Unsafe = PS["Control.Monad.Eff.Exception.Unsafe"];
  var Data_Show = PS["Data.Show"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Function = PS["Data.Function"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Functor = PS["Data.Functor"];
  var setCanvasDimensions = function (d) {
      return function (ce) {
          return Control_Bind.bind(Control_Monad_Eff.bindEff)($foreign.setCanvasHeight(d.height)(ce))($foreign.setCanvasWidth(d.width));
      };
  };
  var getCanvasElementById = function (elId) {
      return Data_Function_Uncurried.runFn3($foreign.getCanvasElementByIdImpl)(elId)(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  };
  exports["getCanvasElementById"] = getCanvasElementById;
  exports["setCanvasDimensions"] = setCanvasDimensions;
  exports["arc"] = $foreign.arc;
  exports["beginPath"] = $foreign.beginPath;
  exports["closePath"] = $foreign.closePath;
  exports["fill"] = $foreign.fill;
  exports["fillRect"] = $foreign.fillRect;
  exports["fillText"] = $foreign.fillText;
  exports["getContext2D"] = $foreign.getContext2D;
  exports["setFillStyle"] = $foreign.setFillStyle;
  exports["setFont"] = $foreign.setFont;
})(PS["Graphics.Canvas"] = PS["Graphics.Canvas"] || {});
(function(exports) {
    "use strict";

  //module Main

  exports.requestAnimationFrame = function(f) {
      return function() {
          window.requestAnimationFrame(function(dt) {
              f();
          });
      }
  };

  exports.onMouseUp = function(canvas) {
      return function(button) {
          return function(f) {
              return function() {
                  canvas.addEventListener("mouseup", function(e) {
                      e.preventDefault();
                      if (e.button == button) {
                          f(e.layerX)(e.layerY)();
                      }
                      return false;
                  }, false);
                  if (button == 2) {
                      canvas.oncontextmenu = function() { return false; }
                  }
              }
          }
      }
  }
})(PS["Main"] = PS["Main"] || {});
(function(exports) {
  // Generated by psc version 0.9.1
  "use strict";
  var $foreign = PS["Main"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Data_Int = PS["Data.Int"];
  var Graphics_Canvas = PS["Graphics.Canvas"];
  var Control_Monad_Eff_Random = PS["Control.Monad.Eff.Random"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var $$Math = PS["Math"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Ring = PS["Data.Ring"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Function = PS["Data.Function"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Unit = PS["Data.Unit"];        
  var Triple = (function () {
      function Triple(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Triple.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Triple(value0, value1, value2);
              };
          };
      };
      return Triple;
  })();
  var Point = (function () {
      function Point(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Point.create = function (value0) {
          return function (value1) {
              return new Point(value0, value1);
          };
      };
      return Point;
  })();
  var Empty = (function () {
      function Empty() {

      };
      Empty.value = new Empty();
      return Empty;
  })();
  var Mine = (function () {
      function Mine() {

      };
      Mine.value = new Mine();
      return Mine;
  })();
  var Numbered = (function () {
      function Numbered(value0) {
          this.value0 = value0;
      };
      Numbered.create = function (value0) {
          return new Numbered(value0);
      };
      return Numbered;
  })();
  var NoClick = (function () {
      function NoClick() {

      };
      NoClick.value = new NoClick();
      return NoClick;
  })();
  var LeftButton = (function () {
      function LeftButton(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      LeftButton.create = function (value0) {
          return function (value1) {
              return new LeftButton(value0, value1);
          };
      };
      return LeftButton;
  })();
  var RightButton = (function () {
      function RightButton(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      RightButton.create = function (value0) {
          return function (value1) {
              return new RightButton(value0, value1);
          };
      };
      return RightButton;
  })();
  var CoverOn = (function () {
      function CoverOn() {

      };
      CoverOn.value = new CoverOn();
      return CoverOn;
  })();
  var CoverOff = (function () {
      function CoverOff() {

      };
      CoverOff.value = new CoverOff();
      return CoverOff;
  })();
  var NoAnim = (function () {
      function NoAnim() {

      };
      NoAnim.value = new NoAnim();
      return NoAnim;
  })();
  var Reveal = (function () {
      function Reveal(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Reveal.create = function (value0) {
          return function (value1) {
              return new Reveal(value0, value1);
          };
      };
      return Reveal;
  })();
  var pointEq = function (dictEq) {
      return new Data_Eq.Eq(function (v) {
          return function (v1) {
              return Data_Eq.eq(dictEq)(v.value0)(v1.value0) && Data_Eq.eq(dictEq)(v.value1)(v1.value1);
          };
      });
  };
  var pieceSize = 32.0;
  var screenSize = {
      width: 20.0 * pieceSize, 
      height: 15.0 * pieceSize
  };
  var pieceEq = new Data_Eq.Eq(function (v) {
      return function (v1) {
          if (v instanceof Empty && v1 instanceof Empty) {
              return true;
          };
          if (v instanceof Mine && v1 instanceof Mine) {
              return true;
          };
          if (v instanceof Numbered && v1 instanceof Numbered) {
              return true;
          };
          return false;
      };
  });
  var newBoard = function (w) {
      return function (h) {
          var neighbors = function (x) {
              return function (y) {
                  return function (board) {
                      var isMine = function (x1) {
                          return function (y1) {
                              if (x1 < 0 || y1 < 0) {
                                  return Data_Maybe.Nothing.value;
                              };
                              if (x1 >= w || y1 >= h) {
                                  return Data_Maybe.Nothing.value;
                              };
                              if (Data_Boolean.otherwise) {
                                  return Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(Data_List.index(board)(x1 + (y1 * w | 0) | 0))(function (p) {
                                      return Data_Eq.eq(pieceEq)(p.pieceType)(Mine.value);
                                  });
                              };
                              throw new Error("Failed pattern match at Main line 139, column 17 - line 142, column 87: " + [ x1.constructor.name, y1.constructor.name ]);
                          };
                      };
                      var count = function (dx) {
                          return function (dy) {
                              return function (c) {
                                  var $47 = isMine(x + dx | 0)(y + dy | 0);
                                  if ($47 instanceof Data_Maybe.Just) {
                                      if ($47.value0) {
                                          return c + 1 | 0;
                                      };
                                      if (!$47.value0) {
                                          return c;
                                      };
                                      throw new Error("Failed pattern match at Main line 135, column 35 - line 135, column 57: " + [ $47.value0.constructor.name ]);
                                  };
                                  if ($47 instanceof Data_Maybe.Nothing) {
                                      return c;
                                  };
                                  throw new Error("Failed pattern match at Main line 134, column 21 - line 136, column 37: " + [ $47.constructor.name ]);
                              };
                          };
                      };
                      var countMines = function ($138) {
                          return (function ($139) {
                              return (function ($140) {
                                  return (function ($141) {
                                      return count(1)(1)(count(0)(1)($141));
                                  })(count(-1)(1)(count(1)(0)($140)));
                              })(count(-1)(0)(count(1)(-1)($139)));
                          })(count(0)(-1)(count(-1)(-1)($138)));
                      };
                      return countMines(0);
                  };
              };
          };
          var numberBoard = function (board) {
              return Partial_Unsafe.unsafePartial(function (dictPartial) {
                  return Data_Functor.mapFlipped(Data_List.functorList)(Control_Apply.apply(Data_List.applyList)(Data_Functor.map(Data_List.functorList)(Data_Tuple.Tuple.create)(Data_List.range(0)(h - 1)))(Data_List.range(0)(w - 1)))(function (v) {
                      var ns = neighbors(v.value1)(v.value0)(board);
                      var n = v.value1 + (v.value0 * w | 0) | 0;
                      var p = Data_Maybe.fromJust(dictPartial)(Data_List.index(board)(n));
                      var $51 = Data_Eq.notEq(pieceEq)(p.pieceType)(Mine.value);
                      if ($51) {
                          var $52 = ns > 0;
                          if ($52) {
                              var $53 = {};
                              for (var $54 in p) {
                                  if (p.hasOwnProperty($54)) {
                                      $53[$54] = p[$54];
                                  };
                              };
                              $53.pieceType = new Numbered(ns);
                              return $53;
                          };
                          if (!$52) {
                              var $55 = {};
                              for (var $56 in p) {
                                  if (p.hasOwnProperty($56)) {
                                      $55[$56] = p[$56];
                                  };
                              };
                              $55.pieceType = Empty.value;
                              return $55;
                          };
                          throw new Error("Failed pattern match at Main line 113, column 21 - line 116, column 48: " + [ $52.constructor.name ]);
                      };
                      if (!$51) {
                          return p;
                      };
                      throw new Error("Failed pattern match at Main line 112, column 20 - line 117, column 23: " + [ $51.constructor.name ]);
                  });
              });
          };
          return function __do() {
              var v = Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_List.traversableList)(Control_Apply.apply(Data_List.applyList)(Data_Functor.map(Data_List.functorList)(Data_Tuple.Tuple.create)(Data_List.range(0)(h - 1)))(Data_List.range(0)(w - 1)))(function (v) {
                  return function __do() {
                      var v1 = Control_Monad_Eff_Random.random();
                      var t = (function () {
                          var $61 = v1 > 0.9;
                          if ($61) {
                              return Mine.value;
                          };
                          if (!$61) {
                              return Empty.value;
                          };
                          throw new Error("Failed pattern match at Main line 96, column 17 - line 96, column 53: " + [ $61.constructor.name ]);
                      })();
                      return {
                          pieceType: t, 
                          x: Data_Int.toNumber(v.value1) * pieceSize, 
                          y: Data_Int.toNumber(v.value0) * pieceSize
                      };
                  };
              })();
              var board$prime = numberBoard(v);
              return board$prime;
          };
      };
  };
  var initialCover = function (w) {
      return function (h) {
          return Data_Functor.mapFlipped(Data_List.functorList)(Control_Apply.apply(Data_List.applyList)(Data_Functor.map(Data_List.functorList)(Data_Tuple.Tuple.create)(Data_List.range(0)(h - 1)))(Data_List.range(0)(w - 1)))(function (v) {
              return {
                  coverType: CoverOn.value, 
                  x: Data_Int.toNumber(v.value1) * pieceSize, 
                  y: Data_Int.toNumber(v.value0) * pieceSize
              };
          });
      };
  };
  var initialGameState = function (w) {
      return function (h) {
          return function __do() {
              var v = newBoard(w)(h)();
              return {
                  board: v, 
                  cover: initialCover(w)(h), 
                  boardWidth: w, 
                  boardHeight: h, 
                  animation: NoAnim.value
              };
          };
      };
  };
  var findSpan = function (__copy_v) {
      return function (__copy_v1) {
          return function (__copy_v2) {
              var v = __copy_v;
              var v1 = __copy_v1;
              var v2 = __copy_v2;
              tco: while (true) {
                  if (v1 instanceof Data_List.Cons) {
                      var pieceAt = function (board) {
                          return function (x) {
                              return function (y) {
                                  if (x < 0 || y < 0) {
                                      return Data_Maybe.Nothing.value;
                                  };
                                  if (x >= v.boardWidth || y >= v.boardHeight) {
                                      return Data_Maybe.Nothing.value;
                                  };
                                  if (Data_Boolean.otherwise) {
                                      return Data_List.index(board)(x + (y * v.boardWidth | 0) | 0);
                                  };
                                  throw new Error("Failed pattern match at Main line 185, column 9 - line 188, column 59: " + [ board.constructor.name, x.constructor.name, y.constructor.name ]);
                              };
                          };
                      };
                      var mPieces = function (v3) {
                          return new Data_List.Cons(new Point(v3.value0 - 1, v3.value1), new Data_List.Cons(new Point(v3.value0 + 1 | 0, v3.value1), new Data_List.Cons(new Point(v3.value0, v3.value1 - 1), new Data_List.Cons(new Point(v3.value0, v3.value1 + 1 | 0), new Data_List.Cons(new Point(v3.value0 - 1, v3.value1 - 1), new Data_List.Cons(new Point(v3.value0 + 1 | 0, v3.value1 - 1), new Data_List.Cons(new Point(v3.value0 - 1, v3.value1 + 1 | 0), new Data_List.Cons(new Point(v3.value0 + 1 | 0, v3.value1 + 1 | 0), Data_List.Nil.value))))))));
                      };
                      var mp = pieceAt(v.board)(v1.value0.value0)(v1.value0.value1);
                      if (mp instanceof Data_Maybe.Just) {
                          var $79 = Data_Eq.eq(pieceEq)(mp.value0.pieceType)(Empty.value);
                          if ($79) {
                              return new Triple(Data_List.union(pointEq(Data_Eq.eqInt))(Data_List.difference(pointEq(Data_Eq.eqInt))(mPieces(v1.value0))(v2))(v1.value1), new Data_List.Cons(v1.value0, v2), v1.value0.value0 + (v1.value0.value1 * v.boardWidth | 0) | 0);
                          };
                          if (!$79) {
                              var $80 = Data_Eq.eq(pieceEq)(mp.value0.pieceType)(new Numbered(0));
                              if ($80) {
                                  return new Triple(v1.value1, new Data_List.Cons(v1.value0, v2), v1.value0.value0 + (v1.value0.value1 * v.boardWidth | 0) | 0);
                              };
                              if (!$80) {
                                  var __tco_v = v;
                                  var __tco_v1 = v1.value1;
                                  var __tco_v2 = new Data_List.Cons(v1.value0, v2);
                                  v = __tco_v;
                                  v1 = __tco_v1;
                                  v2 = __tco_v2;
                                  continue tco;
                              };
                              throw new Error("Failed pattern match at Main line 166, column 26 - line 169, column 56: " + [ $80.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Main line 164, column 21 - line 169, column 56: " + [ $79.constructor.name ]);
                      };
                      if (mp instanceof Data_Maybe.Nothing) {
                          var __tco_v = v;
                          var __tco_v1 = v1.value1;
                          var __tco_v2 = v2;
                          v = __tco_v;
                          v1 = __tco_v1;
                          v2 = __tco_v2;
                          continue tco;
                      };
                      throw new Error("Failed pattern match at Main line 163, column 8 - line 170, column 43: " + [ mp.constructor.name ]);
                  };
                  if (v1 instanceof Data_List.Nil && v2 instanceof Data_List.Cons) {
                      return new Triple(Data_List.Nil.value, v2, v2.value0.value0 + (v2.value0.value1 * v.boardWidth | 0) | 0);
                  };
                  if (v1 instanceof Data_List.Nil && v2 instanceof Data_List.Nil) {
                      return new Triple(Data_List.Nil.value, Data_List.Nil.value, 0);
                  };
                  throw new Error("Failed pattern match at Main line 160, column 1 - line 188, column 59: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
              };
          };
      };
  };
  var updateAnimation = function (gs) {
      var go = function (dictPartial) {
          return function (v) {
              if (v.value0 instanceof Data_List.Cons) {
                  var nCover = Data_Function.apply(Data_Maybe.fromJust(dictPartial))(Data_List.modifyAt(v.value2)(function (p) {
                      var $91 = {};
                      for (var $92 in p) {
                          if (p.hasOwnProperty($92)) {
                              $91[$92] = p[$92];
                          };
                      };
                      $91.coverType = CoverOff.value;
                      return $91;
                  })(gs.cover));
                  var $93 = {};
                  for (var $94 in gs) {
                      if (gs.hasOwnProperty($94)) {
                          $93[$94] = gs[$94];
                      };
                  };
                  $93.cover = nCover;
                  $93.animation = new Reveal(v.value0, v.value1);
                  return $93;
              };
              if (v.value0 instanceof Data_List.Nil) {
                  var nCover = Data_Function.apply(Data_Maybe.fromJust(dictPartial))(Data_List.modifyAt(v.value2)(function (p) {
                      var $100 = {};
                      for (var $101 in p) {
                          if (p.hasOwnProperty($101)) {
                              $100[$101] = p[$101];
                          };
                      };
                      $100.coverType = CoverOff.value;
                      return $100;
                  })(gs.cover));
                  var $102 = {};
                  for (var $103 in gs) {
                      if (gs.hasOwnProperty($103)) {
                          $102[$103] = gs[$103];
                      };
                  };
                  $102.cover = nCover;
                  $102.animation = NoAnim.value;
                  return $102;
              };
              throw new Error("Failed pattern match at Main line 152, column 9 - line 154, column 63: " + [ v.constructor.name ]);
          };
      };
      if (gs.animation instanceof NoAnim) {
          return gs;
      };
      if (gs.animation instanceof Reveal) {
          return Data_Function.apply(Partial_Unsafe.unsafePartial)(function (dictPartial) {
              return Data_Function.apply(go(dictPartial))(findSpan(gs)(gs.animation.value0)(gs.animation.value1));
          });
      };
      throw new Error("Failed pattern match at Main line 147, column 5 - line 149, column 83: " + [ gs.animation.constructor.name ]);
  };
  var drawBoard = function (ctx) {
      return function (board) {
          var drawNumbered = function (v) {
              if (v.pieceType instanceof Numbered) {
                  return function __do() {
                      Graphics_Canvas.setFont(Data_Show.show(Data_Show.showNumber)((pieceSize * 6.0) / 7.0) + "px sans-serif")(ctx)();
                      Graphics_Canvas.setFillStyle("black")(ctx)();
                      Graphics_Canvas.fillText(ctx)(Data_Show.show(Data_Show.showInt)(v.pieceType.value0))(v.x + pieceSize * 0.25)(v.y + pieceSize * 0.8)();
                      return v;
                  };
              };
              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(v);
          };
          var drawMine = function (piece) {
              var r = (pieceSize - 8.0) / 2.0;
              var x = piece.x + r + 6.0;
              var y = piece.y + r + 6.0;
              return function __do() {
                  Graphics_Canvas.setFillStyle("#b00")(ctx)();
                  Graphics_Canvas.beginPath(ctx)();
                  Graphics_Canvas.arc(ctx)({
                      x: x, 
                      y: y, 
                      r: r, 
                      start: 0.0, 
                      end: 2.0 * $$Math.pi
                  })();
                  Graphics_Canvas.closePath(ctx)();
                  Graphics_Canvas.fill(ctx)();
                  var r$prime = r / 1.5;
                  Graphics_Canvas.setFillStyle("#400")(ctx)();
                  Graphics_Canvas.beginPath(ctx)();
                  Graphics_Canvas.arc(ctx)({
                      x: x, 
                      y: y, 
                      r: r$prime, 
                      start: 0.0, 
                      end: 2.0 * $$Math.pi
                  })();
                  Graphics_Canvas.closePath(ctx)();
                  Graphics_Canvas.fill(ctx)();
                  return piece;
              };
          };
          var drawBackground = function (piece) {
              return function __do() {
                  Graphics_Canvas.setFillStyle("black")(ctx)();
                  Graphics_Canvas.fillRect(ctx)({
                      x: piece.x, 
                      y: piece.y, 
                      w: pieceSize, 
                      h: pieceSize
                  })();
                  Graphics_Canvas.setFillStyle("#999")(ctx)();
                  Graphics_Canvas.fillRect(ctx)({
                      x: piece.x + 4.0, 
                      y: piece.y + 4.0, 
                      w: pieceSize - 4.0, 
                      h: pieceSize - 4.0
                  })();
                  return piece;
              };
          };
          return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_List.traversableList)(board)(function (piece) {
              return Data_Functor["void"](Control_Monad_Eff.functorEff)((function () {
                  if (piece.pieceType instanceof Empty) {
                      return drawBackground(piece);
                  };
                  if (piece.pieceType instanceof Mine) {
                      return Control_Bind.bind(Control_Monad_Eff.bindEff)(drawBackground(piece))(drawMine);
                  };
                  if (piece.pieceType instanceof Numbered) {
                      return Control_Bind.bind(Control_Monad_Eff.bindEff)(drawBackground(piece))(drawNumbered);
                  };
                  throw new Error("Failed pattern match at Main line 220, column 9 - line 223, column 64: " + [ piece.pieceType.constructor.name ]);
              })());
          }));
      };
  };
  var coverEq = new Data_Eq.Eq(function (v) {
      return function (v1) {
          if (v instanceof CoverOn && v1 instanceof CoverOn) {
              return true;
          };
          if (v instanceof CoverOff && v1 instanceof CoverOff) {
              return true;
          };
          return false;
      };
  });
  var drawCover = function (ctx) {
      return function (cover) {
          return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_List.traversableList)(cover)(function (c) {
              return Control_Bind.ifM(Control_Monad_Eff.bindEff)(Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Eq.eq(coverEq)(c.coverType)(CoverOff.value)))(Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit))(Data_Functor["void"](Control_Monad_Eff.functorEff)(function __do() {
                  Graphics_Canvas.setFillStyle("black")(ctx)();
                  Graphics_Canvas.fillRect(ctx)({
                      x: c.x, 
                      y: c.y, 
                      w: pieceSize, 
                      h: pieceSize
                  })();
                  Graphics_Canvas.setFillStyle("#333")(ctx)();
                  return Graphics_Canvas.fillRect(ctx)({
                      x: c.x + 4.0, 
                      y: c.y + 4.0, 
                      w: pieceSize - 4.0, 
                      h: pieceSize - 4.0
                  })();
              }));
          }));
      };
  };
  var clearCanvas = function (ctx) {
      return Data_Functor["void"](Control_Monad_Eff.functorEff)(function __do() {
          Graphics_Canvas.setFillStyle("rgb(50, 50, 50)")(ctx)();
          return Graphics_Canvas.fillRect(ctx)({
              x: 0.0, 
              y: 0.0, 
              w: screenSize.width, 
              h: screenSize.height
          })();
      });
  };
  var animEq = new Data_Eq.Eq(function (v) {
      return function (v1) {
          if (v instanceof NoAnim && v1 instanceof NoAnim) {
              return true;
          };
          return false;
      };
  });
  var update = function (input) {
      return function (gs) {
          var ngs = updateAnimation(gs);
          if (input instanceof NoClick) {
              return new Data_Tuple.Tuple(input, ngs);
          };
          if (input instanceof LeftButton) {
              var $120 = Data_Eq.eq(animEq)(ngs.animation)(NoAnim.value);
              if ($120) {
                  var ty = Data_Int.floor(input.value1 / pieceSize);
                  var tx = Data_Int.floor(input.value0 / pieceSize);
                  var $121 = Data_List.index(ngs.cover)(tx + (ty * ngs.boardWidth | 0) | 0);
                  if ($121 instanceof Data_Maybe.Just) {
                      var $122 = Data_Eq.eq(coverEq)($121.value0.coverType)(CoverOn.value);
                      if ($122) {
                          return new Data_Tuple.Tuple(NoClick.value, (function () {
                              var $123 = {};
                              for (var $124 in ngs) {
                                  if (ngs.hasOwnProperty($124)) {
                                      $123[$124] = ngs[$124];
                                  };
                              };
                              $123.animation = new Reveal(new Data_List.Cons(new Point(tx, ty), Data_List.Nil.value), Data_List.Nil.value);
                              return $123;
                          })());
                      };
                      if (!$122) {
                          return new Data_Tuple.Tuple(NoClick.value, ngs);
                      };
                      throw new Error("Failed pattern match at Main line 203, column 33 - line 206, column 54: " + [ $122.constructor.name ]);
                  };
                  if ($121 instanceof Data_Maybe.Nothing) {
                      return new Data_Tuple.Tuple(NoClick.value, ngs);
                  };
                  throw new Error("Failed pattern match at Main line 202, column 20 - line 207, column 49: " + [ $121.constructor.name ]);
              };
              if (!$120) {
                  return new Data_Tuple.Tuple(NoClick.value, ngs);
              };
              throw new Error("Failed pattern match at Main line 199, column 13 - line 209, column 34: " + [ $120.constructor.name ]);
          };
          if (input instanceof RightButton) {
              return new Data_Tuple.Tuple(input, ngs);
          };
          throw new Error("Failed pattern match at Main line 196, column 8 - line 210, column 43: " + [ input.constructor.name ]);
      };
  };
  var main = Data_Function.apply(Data_Functor["void"](Control_Monad_Eff.functorEff))(Data_Function.apply(Partial_Unsafe.unsafePartial)(function (dictPartial) {
      return function __do() {
          var v = Graphics_Canvas.getCanvasElementById("gamecanvas")();
          var __unused = function (dictPartial1) {
              return function ($dollar32) {
                  return $dollar32;
              };
          };
          return __unused(dictPartial)((function () {
              if (v instanceof Data_Maybe.Just) {
                  return function __do() {
                      Graphics_Canvas.setCanvasDimensions(screenSize)(v.value0)();
                      var v1 = Graphics_Canvas.getContext2D(v.value0)();
                      var v2 = initialGameState(20)(15)();
                      var v3 = Control_Monad_Eff_Ref.newRef(v2)();
                      var v4 = Control_Monad_Eff_Ref.newRef(NoClick.value)();
                      $foreign.onMouseUp(v.value0)(0)(function (x) {
                          return function (y) {
                              return Control_Monad_Eff_Ref.writeRef(v4)(new LeftButton(x, y));
                          };
                      })();
                      $foreign.onMouseUp(v.value0)(2)(function (x) {
                          return function (y) {
                              return Control_Monad_Eff_Ref.writeRef(v4)(new RightButton(x, y));
                          };
                      })();
                      var loop = Data_Functor["void"](Control_Monad_Eff.functorEff)(function __do() {
                          var v5 = Control_Monad_Eff_Ref.readRef(v4)();
                          var v6 = Control_Monad_Eff_Ref.readRef(v3)();
                          var nextStates = update(v5)(v6);
                          var nextState = Data_Tuple.snd(nextStates);
                          var nextInput = Data_Tuple.fst(nextStates);
                          drawBoard(v1)(nextState.board)();
                          drawCover(v1)(nextState.cover)();
                          Control_Monad_Eff_Ref.writeRef(v4)(nextInput)();
                          Control_Monad_Eff_Ref.writeRef(v3)(nextState)();
                          return $foreign.requestAnimationFrame(loop)();
                      });
                      return $foreign.requestAnimationFrame(loop)();
                  };
              };
              throw new Error("Failed pattern match at Main line 272, column 8 - line 302, column 27: " + [ v.constructor.name ]);
          })())();
      };
  }));
  exports["NoAnim"] = NoAnim;
  exports["Reveal"] = Reveal;
  exports["CoverOn"] = CoverOn;
  exports["CoverOff"] = CoverOff;
  exports["NoClick"] = NoClick;
  exports["LeftButton"] = LeftButton;
  exports["RightButton"] = RightButton;
  exports["Empty"] = Empty;
  exports["Mine"] = Mine;
  exports["Numbered"] = Numbered;
  exports["Point"] = Point;
  exports["Triple"] = Triple;
  exports["clearCanvas"] = clearCanvas;
  exports["drawBoard"] = drawBoard;
  exports["drawCover"] = drawCover;
  exports["findSpan"] = findSpan;
  exports["initialCover"] = initialCover;
  exports["initialGameState"] = initialGameState;
  exports["main"] = main;
  exports["newBoard"] = newBoard;
  exports["pieceSize"] = pieceSize;
  exports["screenSize"] = screenSize;
  exports["update"] = update;
  exports["updateAnimation"] = updateAnimation;
  exports["pointEq"] = pointEq;
  exports["pieceEq"] = pieceEq;
  exports["coverEq"] = coverEq;
  exports["animEq"] = animEq;
  exports["onMouseUp"] = $foreign.onMouseUp;
  exports["requestAnimationFrame"] = $foreign.requestAnimationFrame;
})(PS["Main"] = PS["Main"] || {});
PS["Main"].main();
